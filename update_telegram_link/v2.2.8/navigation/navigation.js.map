{"version":3,"sources":["../../../../src/navigation/navigation.es6"],"names":["menu_selectors","getType","acc","id","loginid","type","MLT","MF","VRTC","REAL","currency","toUpperCase","match","initLoginButton","root","account_menu","find","time","state","show_login","local_storage","get","login_disabled","logout_disabled","account","show","balance","is_virtual","show_submenu","show_new_account_link","is_login_in_progress","openRealAccount","real_account_binary_url","getBinaryUrl","window","open","openFinancialAccountMF","financial_account_binary_url","destroy_windows","data_attribute","each","inx","elm","dlg","dialog","one","_","defer","remove","oauth","map","e","showLoginWin","require","login_win","init","toggleVisibility","value","toggleSubMenu","logout","liveapi","invalidate","switchAccount","switch_account","then","catch","err","$","growl","error","message","code","rv","bind","update_balance","data","authorize","formatPrice","events","on","loginId","set","is_current_account_real","getLandingCompany","what_todo","show_financial_link","show_realaccount_link","loginIds","loginids","has_real_account","some","is_real","has_mf_or_mlt","is_mf","is_mlt","has_disabled_account","is_disabled","oAuthLoginIds","lockedIds","filter","s_disabled","join","fixed","i18n","replace","console","log","text","moment","utc","format","setInterval","initLang","addBack","lang","name","confirm","visible","languages","onclick","location","reload","contact_us_el","document","getElementById","logo_container","href","cached","send","website_status","supported_languages","m","toLowerCase","newList","intersectionBy","length","forEach","push","Promise","all","landing_company","country","landing_company_details","landing_company_name","results","virtual_company","financial_company","financial","gaming","gaming_company","curr_login","test","shortcode","is_mx","cr_accts","is_cr","legal_allowed_currencies","currencies_config","has_fiat","crypto_currencies","difference","curr","acct","has_crypto","has_all_crypto","callback","$navHtml","prepend","menu","workspace","is_beta","closest","selector","nav_selector","dialog_selector","current_selector","click","fadeToggle","css","mouseup","is","target","has","hide"],"mappings":"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","file":"navigation.js","sourcesContent":["import $         from 'jquery';\nimport moment    from 'moment';\nimport _         from 'lodash';\nimport liveapi   from '../websockets/binary_websockets';\nimport rv        from '../common/rivetsExtra';\nimport $navHtml  from 'text!./navigation.html';\nimport workspace from '../workspace/workspace.js';\nimport '../common/util';\nimport 'css!navigation/navigation.css';\n\nconst menu_selectors = [\n   '.trade',\n   '.instruments',\n   '.resources',\n   '.workspace'\n];\n\nconst getType = (acc) => {\n   let id = acc.loginid || acc.id;\n   if(!acc || !id) return;\n   const type = {\n         MLT:'Gaming', \n         MF:'Investment',\n         VRTC:'Demo',\n         REAL:(acc.currency || '').toUpperCase() || 'Real',\n   };\n\n   id = id.match(/^(MLT|MF|VRTC)/i) ? id.match(/^(MLT|MF|VRTC)/i)[0] : 'REAL';\n\n   return type[id] + ' Account';\n};\n\nconst initLoginButton = (root) => {\n   const account_menu = root.find('.account-menu');\n   const time = root.find('span.time');\n   const state = {\n      show_login: local_storage.get('oauth') ? false : true,\n      login_disabled: false,\n      currency: '',\n      logout_disabled: false,\n      account: {\n         show: false,\n         type: '',\n         id: '',\n         balance: '',\n         is_virtual: 0,\n      },\n      show_submenu: false,\n      show_new_account_link: false,\n      is_login_in_progress: false,\n      openRealAccount: () => {\n         const real_account_binary_url = getBinaryUrl('new_account/realws.html');\n         window.open(real_account_binary_url, '_blank');\n      },\n      openFinancialAccountMF: () => {\n         const financial_account_binary_url = getBinaryUrl('new_account/maltainvestws');\n         window.open(financial_account_binary_url, '_blank');\n      }\n   };\n\n   const destroy_windows = (data_attribute) => {\n      $(`.webtrader-dialog[${data_attribute}]`).each((inx, elm) => {\n         const dlg = $(elm);\n         dlg.dialog('close');\n         dlg.one('dialogclose', () => {\n            _.defer(() => dlg.dialog('instance') && dlg.dialog('destroy') && dlg.remove());\n         });\n      });\n   }\n\n   state.oauth = local_storage.get('oauth') || [];\n   state.oauth = state.oauth.map((e) => {\n      e.type = getType(e);\n      return e;\n   });\n   state.showLoginWin = () => {\n      state.login_disabled = true;\n      require(['oauth/login'], (login_win) => {\n         state.login_disabled = false;\n         login_win.init();\n      });\n   };\n\n   state.toggleVisibility = (value) => {\n      state.show_submenu = value;\n   };\n\n   state.toggleSubMenu = (value) => {\n      if (!state.is_login_in_progress) {\n         state.show_submenu = value;\n      }\n   }\n\n   state.logout = () => {\n      liveapi.invalidate();\n      state.logout_disabled = true;\n   };\n\n   state.switchAccount = (id) => {\n      destroy_windows('data-account-specific=true');\n      state.is_login_in_progress = true;\n      liveapi.switch_account(id)\n         .then(() => {\n            state.is_login_in_progress = false;\n         })\n         .catch((err) => {\n            state.is_login_in_progress = false;\n            $.growl.error({ message: err.message });\n            // logout user if he decided to self exclude himself.\n            if (err.code === 'SelfExclusion') {\n               liveapi.invalidate();\n            }\n         });\n   }\n\n   rv.bind(account_menu, state);\n\n   const update_balance = (data) => {\n      if (!state.currency) {\n         /* We're not going to set currency automatically, since the user might select a different currency  */\n         if (local_storage.get('currency')){\n            state.currency = local_storage.get('currency');\n         } else \n         return;\n      }\n\n      let value = '0';\n      if (data.authorize) value = data.authorize.balance;\n      else if (data.balance) value =  data.balance.balance ;\n      else return;\n\n      state.account.balance = formatPrice(value, state.currency);\n   };\n\n   /* update balance on change */\n   liveapi.events.on('balance', data => {\n      if (local_storage.get(\"authorize\")) {\n         const loginId = local_storage.get('authorize').loginid;\n         if (data.balance && data.balance.loginid === loginId) update_balance(data);\n      }\n   });\n\n   liveapi.events.on('logout', () => {\n      destroy_windows('data-authorized=true');\n      destroy_windows('data-account-specific=true');\n      /* destroy all authorized dialogs */\n      state.logout_disabled = false;\n      state.account.show = false;\n      state.show_login = true;\n      state.account.id = '';\n      state.account.balance = '';\n      state.account.type = '';\n      state.currency = '';\n\n      local_storage.remove('currency');\n   });\n\n   liveapi.events.on('login', (data) => {\n      destroy_windows('data-authorized=true');\n      /* destroy all authorized dialogs */\n      state.show_login = false;\n      state.account.show = true;\n      state.account.id = data.authorize.loginid;\n      state.account.is_virtual = data.authorize.is_virtual;\n      state.oauth = local_storage.get('oauth') || [];\n      state.oauth = state.oauth.map((e) => {\n         e.type = getType(e);\n         return e;\n      });\n      state.account.type = getType(data.authorize);\n\n      state.currency = data.authorize.currency;\n      local_storage.set('currency', state.currency);\n      if (local_storage.get('authorize')) {\n         const loginId = local_storage.get('authorize').loginid;\n         if (data.authorize && data.authorize.loginid === loginId) update_balance(data);\n      }\n\n      const is_current_account_real = data.authorize.is_virtual === 0;\n\n      getLandingCompany().then((what_todo) => {\n         state.show_financial_link = (what_todo === 'upgrade-mf');\n         state.show_realaccount_link = (what_todo === 'upgrade-mlt');\n         const loginIds = loginids();\n         state.has_real_account = _.some(loginIds, { is_real: true });\n         state.has_mf_or_mlt = _.some(loginIds, { is_mf: true }) || _.some(loginIds, { is_mlt: true });\n         state.show_new_account_link = what_todo === 'new-account';\n         state.has_disabled_account =  _.some(loginIds, { is_disabled: true });\n         // https://trello.com/c/9PCHncnx/5146-8-raunak-accountlistordering\n         // https://trello.com/c/fNZ1Zkbb/2529-negar-accountlistauthorize\n         if(_.some(oAuthLoginIds(), { is_disabled: true })) {\n            const lockedIds = _.filter(loginIds, { s_disabled:true }).map(acc => acc.id).join(',');\n            $.growl.error({\n               fixed: true,\n               message:`<a href='${getBinaryUrl('contact.html')}' target='_blank'>\n                ${'Your account (%) is locked, please contact customer support for more info.'.i18n().replace('%', lockedIds)}\n               </a>`\n            });\n         }\n      });\n   });\n\n   // Restore login-button in case of login-error\n   $('.login').on('login-error', (e) => {\n      console.log('Encountered login error');\n      state.show_login = true;\n   });\n\n   /* update time every second */\n   time.text(moment.utc().format('YYYY-MM-DD HH:mm:ss') + ' GMT');\n   setInterval(() => {\n      time.text(moment.utc().format('YYYY-MM-DD HH:mm:ss') + ' GMT');\n   }, 1000);\n}\n\nconst initLang = (root) => {\n   root = root.find('#topbar').addBack('#topbar');\n   const state = {\n      lang: {\n         value: 'en', name: 'English'\n      },\n      confirm: {\n         visible: false\n      },\n      languages: [\n         { value: 'en', name: 'English'},\n         { value: 'de', name: 'Deutsch'},\n         { value: 'es', name: 'Español'},\n         { value: 'fr', name: 'Français'},\n         // { value: 'id', name: 'Indonesia'},\n         { value: 'it', name: 'Italiano'},\n         { value: 'pl', name: 'Polish'},\n         { value: 'pt', name: 'Português'},\n         { value: 'ru', name: 'Русский'},\n         { value: 'th', name: 'Thai'},\n         { value: 'vi', name: 'Tiếng Việt'},\n         { value: 'zh_cn', name: '简体中文'},\n         { value: 'zh_tw', name: '繁體中文'}\n      ],\n   };\n\n   state.onclick = (value) => {\n      state.confirm.visible = false;\n      const lang = _.find(state.languages, { value: value });\n      if(lang && state.lang && lang.value == state.lang.value)\n         return;\n\n      local_storage.set('i18n', { value: lang.value });\n      window.location.reload();\n   };\n\n   state.toggleVisibility = (visible) => {\n      state.confirm.visible = visible;\n   }\n\n   const lang = (local_storage.get('i18n') || { value: 'en' }).value;\n   state.lang = _.find(state.languages, { value: lang }); // set the initial state.\n\n   const contact_us_el = document.getElementById('contact-us');\n   const logo_container = document.getElementById('logo-container');\n\n   contact_us_el.href = getBinaryUrl('contact.html');\n   logo_container.href = getBinaryUrl('home.html');\n\n   rv.bind(root[0], state);\n\n   //Init the trigger of loading language list from server\n   liveapi\n      .cached\n      .send({website_status: 1})\n      .then((data) => {\n         let supported_languages = (data.website_status || {}).supported_languages || [];\n         supported_languages = _.map(supported_languages, (m) => ({ value: m.toLowerCase() }));\n         const newList = _.intersectionBy(state.languages, supported_languages, 'value') || [];\n         state.languages.length = 0;\n         newList.forEach(\n            (e) => state.languages.push(e)\n         );\n      })\n      .catch(console.error);\n}\n\n/*\n  1: company = (gaming company) && (financial company && financial company shortcode = maltainvest)\n     a: no MLT account  ==> upgrade to MLT\n     b: has MLT account\n        I:     upgrade to MF\n    c: has both MLT & MF ==> do nothing\n  2: company = financial company &&  financial company shortcode = maltainvest) && there is NO gaming company\n     a: no MF account\n        I: company = financial ==> upgrade to MF\n     b: has MF account => do nothing\n  3: company & shortcode anything except above\n     a: no MLT, MX, CR account ==> upgrade to MLT, MX or CR\n     b: has MLT, MX ==> do nothing\n  4: company shortcode == japan\n     a: do nothing and show an error message\n  5: shortcode = svg\n     a: No currency\n       I: Do nothing.\n     b: Fiat currency && Not all crypto currency account\n       I: Allow crypto account\n     c: Crypto currency account && No fiat currency account\n      I: Allow fiat account\n     d: Fiat && all crypto account\n      I: do nothing.\n  returns 'upgrade-mlt' | 'upgrade-mf' | 'do-nothing' | 'new_account'\n*/\nexport const getLandingCompany = () => {\n   return liveapi.cached.authorize().then((data) => {\n      return Promise.all([\n            liveapi.cached.send({ landing_company: data.authorize.country }),\n            liveapi.cached.send({ landing_company_details: data.authorize.landing_company_name })\n         ])\n         .then((results) => {\n            const data = results[0];\n            const landing_company_details = data.landing_company.virtual_company === 'virtual' ?\n              data.landing_company.financial_company || {} :\n              results[1].landing_company_details || {};\n            const financial = data.landing_company.financial_company;\n            const gaming = data.landing_company.gaming_company;\n            const loginIds = loginids();\n            const curr_login = local_storage.get('oauth')[0];\n            curr_login.is_mlt = /MLT/.test(curr_login.id);\n            if (gaming && financial && financial.shortcode === 'maltainvest') { // 1:\n               if (_.some(loginIds, { is_mlt: true }) && (_.some(loginIds, { is_mf: true }) || !curr_login.is_mlt)) // 1-c\n                  return 'do-nothing';\n               if (_.some(loginIds, { is_mlt: true })) // 1-b\n                  return 'upgrade-mf';\n               return 'upgrade-mlt'; // 1-a\n            }\n            if (financial && financial.shortcode === 'maltainvest' && !gaming) { // 2:\n               if (_.some(loginIds, { is_mf: true })) // 2-b\n                  return 'do-nothing';\n               return 'upgrade-mf'; // 2-a\n            }\n            // 3:\n            if (_.some(loginIds, { is_mlt: true }) || _.some(loginIds, { is_mx: true }))\n               return 'do-nothing'; // 3-b\n            // 4: never happens, japan accounts are not able to log into webtrader.\n            // 5:\n            const cr_accts = _.filter(loginIds, { is_cr: true });\n            if( cr_accts.length && landing_company_details.legal_allowed_currencies) {\n               const currencies_config = local_storage.get('currencies_config') || {};\n               const has_fiat = _.some(cr_accts, { type: 'fiat' });\n               const crypto_currencies = _.difference(\n                  landing_company_details.legal_allowed_currencies.filter((curr) => {\n                     return currencies_config[curr].type === 'crypto';\n                  }),\n                  _.filter(cr_accts, {type: 'crypto'}).map((acct) => acct.currency)\n               );\n               const has_crypto = crypto_currencies.length && crypto_currencies.length !== (landing_company_details.legal_allowed_currencies.filter((curr) => {\n                  return currencies_config[curr].type === 'crypto';\n               }) || []).length;\n               const has_all_crypto = !crypto_currencies.length;\n               if((!has_fiat && has_crypto) || (has_fiat && !has_all_crypto)) {\n                  return 'new-account'; // 5-b and 5-c\n               }\n               return 'do-nothing'; // 5-d\n            }\n            return 'upgrade-mlt'; // 3-a (calls the normal account opening api which creates an mlt, mx or cr account).\n         })\n         .catch((err) => {\n            $.growl.error({ message: err.message });\n         });;\n   })\n   .catch((err) => {\n      $.growl.error({ message: err.message });\n   });\n}\n\nexport const init = (callback) => {\n   const root = $($navHtml).i18n();\n   $('body').prepend(root);\n\n   initLoginButton(root);\n   initLang(root);\n\n   //Load theme settings ...\n   require(['themes/themes']);\n\n   $('#nav-menu .resources > ul').menu();\n   workspace.init($('#nav-menu .workspace'));\n\n   if (callback) {\n      callback($('#nav-menu'));\n   }\n\n   //Show config <LI> if its production and not BETA\n   if (is_beta()) {\n      root.find('a.config').closest('li').show();\n   }\n\n   // Handle click navigation to show menu dialog\n   menu_selectors.forEach((selector) => {\n      const nav_selector = 'nav #nav-menu';\n      const dialog_selector = `${nav_selector} ${selector} > ul`;\n      const current_selector = `${nav_selector} ${selector}`;\n      const visible = {\n         'visibility': 'visible',\n         'opacity': 1,\n      };\n      $(current_selector).click((e) => {\n            $(dialog_selector).fadeToggle('fast',\n            () => {\n               $(dialog_selector).css(visible);\n            }\n         );\n      });\n      $(document).mouseup((e) => {\n         if (!$(current_selector).is(e.target) && $(current_selector).has(e.target).length === 0) {\n            $(dialog_selector).hide();\n         }\n      });\n   });\n}\n\nexport default {\n   init,\n   getLandingCompany\n};\n"]}