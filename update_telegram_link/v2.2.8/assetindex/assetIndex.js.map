{"version":3,"sources":["../../../../src/assetindex/assetIndex.es6"],"names":["table_el","asset_win_el","header_el","dialog_buttons_el","init","li","click","windows","createBlankWindow","title","i18n","dialogClass","minWidth","minHeight","track","module_id","is_unique","data","dialog","require","initAssetWin","moveToTop","state","dropdown","display_markets","display_submarkets","is_volatility","sorted_markets","market_submarkets","selected_market","table","asset_data","asset_data_extract","display_headers","display_asset_data","search_input","search","event","isTableRowSearchValue","asset","value","toLowerCase","indexOf","updateDisplayTable","filter","checkVolatility","market_name","market_names","volatility_indices","innerText","initTable","getActiveSymAndAssetsData","then","result","liveapi","send","active_symbols","response","populateTable","catch","err","$","growl","error","message","console","symbols","active_symbols_data","asset_index_data","asset_index","isEmptyObject","parent","find","addClass","marketsDropdown","submarketsDropdown","updateTable","val","submarket_name","rows","map","props","symbol","push","forEach","asset_type","asset_list","asset_from","asset_to","assignAssetRows","fillFalseRows","row_result","assets","temp_asset","Array","length","isArray","asset_from_to","indexhead","header_length","i","row","markets_sorted_list","makeSelectmenu","insertAfter","list","inx","changed","submarket_list","Object","keys","update_list","width","selectmenu","submarkets","sorted_submarkets","processing_msg","attr","show","asset_index_request","Promise","all","cached","results","hide","resolve","reject","$html","appendTo","rv","bind","events","on"],"mappings":"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","file":"assetIndex.js","sourcesContent":["ï»¿import $ from 'jquery';\nimport windows from '../windows/windows';\nimport liveapi from '../websockets/binary_websockets';\nimport rv from 'common/rivetsExtra';\nimport 'jquery-growl';\nimport 'css!./assetIndex.css';\nimport { getObjectMarketSubmarkets, getSortedMarkets, getSortedSubmarkets } from '../common/marketUtils';\nimport 'common/util'\n\nlet table_el = null;\nlet asset_win_el = null;\nlet header_el = null;\nlet dialog_buttons_el = null;\n\nexport const init = (li) => {\n    li.click(() => {\n        if (!asset_win_el) {\n            asset_win_el = windows.createBlankWindow($('<div/>'), {\n                title: 'Asset Index'.i18n(),\n                dialogClass: 'assetIndex',\n                minWidth: 800,\n                minHeight: 400,\n            });\n            asset_win_el.track({\n                module_id: 'assetIndex',\n                is_unique: true,\n                data: null\n            });\n            asset_win_el.dialog('open');\n            require(['text!assetindex/assetIndex.html'], initAssetWin);\n        } else\n            asset_win_el.moveToTop();\n    });\n}\n\nconst state = {\n    dropdown: {\n        display_markets: null,\n        display_submarkets: null,\n        is_volatility: false,\n        sorted_markets: null,\n        market_submarkets: null,\n        selected_market: null\n    },\n    table: {\n        asset_data: [],\n        asset_data_extract: [],\n        display_headers: [],\n        display_asset_data: [],\n        search_input: ''\n    },\n    search: function (event) {\n        function isTableRowSearchValue(asset) {\n            const value = state.table.search_input.toLowerCase();\n            return asset[0].toLowerCase().indexOf(value.toLowerCase()) !== -1;\n        }\n\n        return (function updateDisplayTable() {\n            state.table.display_asset_data = [];\n            state.table.display_asset_data = state.table.asset_data_extract.filter(isTableRowSearchValue);\n            state.dropdown.is_volatility = checkVolatility(state.dropdown.selected_market, state.dropdown.display_markets);\n        })();\n    }\n}\n\nconst checkVolatility = (market_name, market_names) => {\n    const volatility_indices = market_names[0][3] ? market_names[0][3].innerText : market_names[0][0].innerText; // locate vol_ind (handle translation)\n    const is_volatility = market_name.indexOf(volatility_indices) !== -1;\n\n    return is_volatility;\n}\n\nconst initTable = () => {\n    getActiveSymAndAssetsData()\n        .then((result) => {\n            liveapi\n               .send({ active_symbols: \"brief\" })\n               .then(function (response) {\n                populateTable(result, response.active_symbols);\n               })\n               .catch((err) => {\n                    $.growl.error({ message: err.message });\n               });\n        })\n        .catch((error) => {\n            $.growl.error({ message: error.message });\n            console.error(error);\n        });\n\n    function populateTable(result, symbols) {\n        const active_symbols_data = symbols;\n        const asset_index_data = [...result[0].asset_index];\n\n        if($.isEmptyObject(active_symbols_data) || $.isEmptyObject(asset_index_data)) return;\n\n        state.dropdown.market_submarkets = getObjectMarketSubmarkets(active_symbols_data);\n        state.dropdown.sorted_markets = getSortedMarkets(active_symbols_data);\n        state.table.asset_data = asset_index_data;\n\n        header_el = asset_win_el.parent().find('.ui-dialog-title').addClass('with-content');\n        dialog_buttons_el = asset_win_el.parent().find('.ui-dialog-titlebar-buttonpane');\n\n        marketsDropdown(state.dropdown.market_submarkets);\n        submarketsDropdown(state.dropdown.market_submarkets);\n        updateTable(state.dropdown.display_markets.val(), state.dropdown.display_submarkets.val());\n\n        function updateTable(market_name, submarket_name) {\n            const symbols = [...state.dropdown.market_submarkets[market_name][submarket_name]];\n            state.dropdown.selected_market = market_name;\n            state.dropdown.is_volatility = checkVolatility(market_name, state.dropdown.display_markets);\n            let rows = state.table.asset_data\n                .filter((asset) => symbols.indexOf(asset[1]) > -1) // asset[1] is symbol\n                .map((asset) => {\n                    const props = [];\n                    const symbol = asset[1];\n                    const asset_data = asset[2];\n                    state.table.display_headers = [];\n                    props.push(symbol);\n                    asset_data.forEach(asset_list => {\n                        const asset_type = asset_list[1];\n                        const asset_from = asset_list[2];\n                        const asset_to = asset_list[3];\n                        state.table.display_headers.push(asset_type);\n                        props.push([asset_type, `${asset_from} - ${asset_to}`]);\n                    });\n\n                    return props;\n                });\n            rows = assignAssetRows(rows);\n            rows = fillFalseRows(rows);\n\n            state.table.display_asset_data = rows;\n            state.table.asset_data_extract = rows;\n\n            function assignAssetRows(rows) {\n                const row_result = [];\n                rows.forEach((assets) => {\n                    const temp_asset = new Array(state.table.display_headers.length + 1);\n                    assets.forEach(asset => {\n                        if (Array.isArray(asset)) {\n                            const asset_type = asset[0];\n                            const asset_from_to = asset[1];\n                            const indexhead = state.table.display_headers.indexOf(asset_type) + 1;\n                            temp_asset[indexhead] = asset_from_to;\n                        } else {\n                            temp_asset[0] = asset;\n                        }\n                    });\n                    row_result.push(temp_asset);\n                });\n                return row_result;\n            }\n\n            function fillFalseRows(rows) {\n                const header_length = state.table.display_headers.length;\n\n                for (let i = 0; i <= header_length; i++) {\n                    rows.forEach(row => {\n                        if (!row[i] || Array.isArray(row[i])) {\n                            row[i] = '-';\n                        }\n                    });\n                }\n\n                return rows;\n            }\n        }\n\n        function marketsDropdown(market_submarkets) {\n            const markets_sorted_list = state.dropdown.sorted_markets;\n\n            if (!state.dropdown.display_markets) {\n                state.dropdown.display_markets = windows\n                    .makeSelectmenu($('<select />').insertAfter(asset_win_el), {\n                        list: markets_sorted_list,\n                        inx: 0,\n                        changed: (val) => {\n                            const submarket_list = getSortedSubmarkets(Object.keys(market_submarkets[val]));\n                            state.dropdown.display_submarkets.update_list(submarket_list);\n                            updateTable(state.dropdown.display_markets.val(), state.dropdown.display_submarkets.val());\n                        },\n                        width: '180px'\n                    });\n                state.dropdown.display_markets.selectmenu('widget').addClass('asset-index-selectmenu');\n            } else {\n                state.dropdown.display_markets.update_list(markets_sorted_list);\n            }\n        }\n\n        function submarketsDropdown(market_submarkets) {\n            const submarkets = Object.keys(market_submarkets[state.dropdown.display_markets.val()]);\n            const sorted_submarkets = getSortedSubmarkets(submarkets);\n\n            if (!state.dropdown.display_submarkets) {\n                state.dropdown.display_submarkets = windows\n                    .makeSelectmenu($('<select />').insertAfter(asset_win_el), {\n                        list: sorted_submarkets,\n                        inx: 0,\n                        changed: (val) => {\n                            updateTable(state.dropdown.display_markets.val(), state.dropdown.display_submarkets.val());\n                        },\n                        width: '200px'\n                    });\n                state.dropdown.display_submarkets.selectmenu('widget').addClass('asset-index-selectmenu');\n            } else {\n                state.dropdown.display_submarkets.update_list(sorted_submarkets);\n            }\n        }\n    }\n\n    function getActiveSymAndAssetsData() {\n        const processing_msg = $(`#${table_el.attr('id')}_processing`).show();\n        const asset_index_request = { asset_index: 1 };\n\n        return Promise.all(\n            [\n                liveapi.cached.send(asset_index_request),\n            ])\n            .then((results) => {\n                processing_msg.hide();\n                return Promise.resolve(results);\n            })\n            .catch((error) => {\n                processing_msg.hide();\n                return Promise.reject(error);\n            });\n    };\n}\n\nconst initAssetWin = ($html) => {\n    $html = $($html).i18n();\n    table_el = $html.filter('table');\n    $html.appendTo(asset_win_el);\n    rv.bind($html[0], state);\n    initTable();\n    require(['websockets/binary_websockets'], (liveapi) => {\n      liveapi.events.on('login', initTable);\n      liveapi.events.on('logout', initTable);\n   });\n}\n\nexport default {\n    init\n}"]}