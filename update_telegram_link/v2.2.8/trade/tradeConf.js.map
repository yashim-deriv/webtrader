{"version":3,"sources":["../../../../src/trade/tradeConf.es6"],"names":["CHART_LABELS","rv","binders","priority","bind","el","model","chart","Highcharts","Chart","subtitle","text","useHTML","title","credits","enabled","type","renderTo","backgroundColor","width","height","marginLeft","marginTop","marginBottom","tooltip","formatter","tick","array","x","xAxis","min","max","getAttribute","labels","yAxis","align","addComma","value","display_decimals","gridLineWidth","series","data","marker","plotOptions","scatter","enableMouseTracking","exporting","enableImages","legend","routine","ticks","tick_idx","length","barrier","makeBarrier","contract_is_finished","drawBarrier","drawEndTime","drawTick","drawStartTime","exit_time_idx","findIndex","epoch","exit_tick_time","drawXLine","dashStyle","addPoint","quote","removePlotLine","id","drawYLine","options","addPlotLine","color","registerTicks","state","extra","proposal_open_contract","on_proposal_open_contract","on_tick","is_path_dependent_last_tick","tick_count","addTick","is_or_after_contract_entry","entry_tick_time","is_new_tick","some","state_tick","should_add_new_tick","status","buy","onContractFinished","updateChart","addTickToState","makeTooltip","push","number","tick_time","moment","utc","format","symbol_name","tick_quote_formatted","tick_arr_copy","slice","forgetStreamAndCb","update","back","visible","contract_id","liveapi","events","off","forget","on","is_different_open_contract_stream","error","onOpenProposalError","temp_ticks","first_tick_epoch","is_getting_history","is_different_stream","symbol","has_missing_ticks","getTickHistory","forEach","stored_tick","start","ticks_history","send","end","style","count","then","history","prices","price","idx","times","sort","a","b","catch","err","$","growl","message","echo_req","subscribe","init","showCallback","hideCallback","chartingRequestMap","digits_after_decimal","pip","root","html","i18n","longcode","balance_after","buy_price","toFixed","currencyFractionalDigits","purchase_time","start_time","transaction_id","payout","currency","potential_profit","potential_profit_text","show_result","spreads","amount_per_point","stop_loss_level","stop_profit_level","is_path_dependent","digits_value","category","category_display","chart_visible","show_tick_chart","arrow","contract_category","Lookback","isLookback","contract_type","formula","amount","undefined","waiting","won","lost","sell_expired","onclick","e","$target","target","hasClass","addClass","require","viewTransaction","removeClass","view","local_storage","get","loginId","loginid","balance"],"mappings":"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","file":"tradeConf.js","sourcesContent":["﻿import $ from 'jquery';\nimport moment from 'moment';\nimport Lookback from './lookback';\nimport chartingRequestMap from '../charts/chartingRequestMap';\nimport { getLabelEl } from '../charts/chartSettings';\nimport liveapi from '../websockets/binary_websockets';\nimport rv from '../common/rivetsExtra';\nimport '../common/util';\nimport 'css!../trade/tradeConf.css';\nimport html from 'text!../trade/tradeConf.html';\n\n/* rv binder to show tick chart for this confirmation dialog */\nconst CHART_LABELS = ['entry_spot_tick', 'barrier', 'exit_spot_tick'];\nrv.binders['tick-chart'] = {\n   priority: 65, /* a low priority to apply last */\n   bind: function(el) {\n      const model = this.model;\n      el.chart = new Highcharts.Chart({\n          subtitle: {\n            text: getLabelEl(CHART_LABELS),\n            useHTML: true,\n         },\n         title: '',\n         credits: {enabled: false},\n         chart: {\n            type: 'line',\n            renderTo: el,\n            backgroundColor: null, /* make background transparent */\n            width: 400,\n            height: 144,\n            marginLeft: 20,\n            marginTop: 35,\n            marginBottom: 15,\n         },\n         tooltip: {\n            useHTML: true,\n            formatter: function () {\n               const tick = model.array[this.x - 1];\n               if (tick && tick.tooltip) {\n                  return `<div class='tooltip-body'>${tick.tooltip}</div>`;\n               }\n            }\n         },\n         xAxis: {\n            type: 'linear',\n            min: 1,\n            max: el.getAttribute('tick-count')*1 + 1 /* exist spot vertical plot will not be at the end */,\n            labels: { enabled: false, }\n         },\n         yAxis: {\n            labels: {\n                  align: 'left',\n                  x: 0,\n                  formatter() {\n                     return addComma(this.value, model.display_decimals);\n                  },\n            },\n            title: '',\n            gridLineWidth: 0,\n         },\n         series: [\n            { data: [] },\n            /* HighChart scales the y-axis automatically based on the maximum value of data.\n             * but it doesn't consider the plotLine's value in its calculations.\n             * We add an invisible seri and late plotline values to work around this issue. */\n            {\n               type: 'scatter',\n               marker: { enabled: false },\n               data: []\n            },\n         ],\n         plotOptions: { scatter: { enableMouseTracking: false } },\n         exporting: {enabled: false, enableImages: false},\n         legend: {enabled: false},\n      });\n   },\n   routine: function(el, ticks){\n      // Handles updating chart: state.ticks.array updates => routine fires\n      const model = this.model;\n      const tick_idx = ticks.length;\n      const barrier = model.makeBarrier();\n      const { contract_is_finished } = model;\n\n      if (barrier) {\n            drawBarrier(barrier);\n      }\n\n      if (contract_is_finished) {\n            drawEndTime(model, ticks);\n            return;\n      }\n\n      if (tick_idx === 0) return;\n      drawTick(tick_idx);\n\n      if (tick_idx === 1) {\n            drawStartTime(tick_idx);\n      }\n\n      function drawEndTime(model, ticks) {\n            let exit_time_idx = ticks.findIndex((tick) => tick.epoch === (+model.exit_tick_time));\n            drawXLine(el.chart, { value: exit_time_idx + 1, dashStyle: 'Dash' });\n      };\n\n      function drawTick(tick_idx) {\n            const tick = ticks[tick_idx -1];\n            el.chart.series[0].addPoint([tick_idx, tick.quote]);\n      };\n\n      function drawStartTime(tick_idx) {\n            drawXLine(el.chart, { value: tick_idx });\n      };\n\n      function drawBarrier(barrier) {\n            el.chart.yAxis[0].removePlotLine(barrier.id);\n            drawYLine(el.chart, barrier);\n      };\n\n      function drawXLine(chart, options) {\n   \n            chart.xAxis[0].addPlotLine({\n               value: options.value,\n               id: options.id || options.value,\n               color: options.color || '#e98024',\n               width: options.width || 2,\n               dashStyle: options.dashStyle || false,\n            });\n      };\n\n      function drawYLine(chart, options) {\n            chart.yAxis[0].addPlotLine({\n               id: options.id,\n               value: options.value,\n               color: 'green',\n               width: 2,\n            });\n            /* Add plotline value to invisible seri to make the plotline always visible. */\n            chart.series[1].addPoint([1, options.value*1]);\n      };\n   }\n};\n\nconst registerTicks = (state, extra) => {\n   let proposal_open_contract;\n   let on_proposal_open_contract;\n   let on_tick;\n   let is_path_dependent_last_tick = false;\n   let { tick_count } = extra;\n\n   const addTick = (tick) => {\n      const is_or_after_contract_entry = (+tick.epoch) >= (+proposal_open_contract.entry_tick_time);\n      const is_new_tick = !state.ticks.array.some((state_tick) => state_tick.epoch === (+tick.epoch));\n      const should_add_new_tick = is_new_tick && !state.ticks.contract_is_finished && is_or_after_contract_entry;\n\n      if (should_add_new_tick) {\n         const contract_is_finished = proposal_open_contract.status !== 'open' && (tick_count < -1 || is_path_dependent_last_tick);\n         state.buy.barrier = proposal_open_contract.barrier ? (+proposal_open_contract.barrier) : null;\n\n         if (contract_is_finished) {\n            onContractFinished(proposal_open_contract);\n            updateChart();\n         }\n\n         tick_count--;\n         if (tick_count > -1) {\n            is_path_dependent_last_tick = tick.epoch >= proposal_open_contract.exit_tick_time ? true : false;\n            addTickToState(tick);\n         }\n      }\n   }\n\n   function addTickToState(tick) {\n      const tooltip = makeTooltip(tick);\n\n      state.ticks.array.push({\n         quote: (+tick.quote),\n         epoch: (+tick.epoch),\n         number: state.ticks.array.length + 1,\n         tooltip,\n      });\n\n      function makeTooltip(tick) {\n            const tick_time = moment.utc(tick.epoch * 1000).format('dddd, MMM D, HH:mm:ss');\n            const { symbol_name } = extra;\n            const tick_quote_formatted = addComma(+tick.quote, state.ticks.display_decimals);\n\n            return `${tick_time}<br/>${symbol_name} ${(tick_quote_formatted)}`;\n      };\n   };\n\n   function updateChart() {\n            const tick_arr_copy = state.ticks.array.slice();\n            state.ticks.array = [...tick_arr_copy];\n    };\n\n   const onContractFinished = (proposal_open_contract) => {\n      forgetStreamAndCb();\n\n      state.ticks.contract_is_finished = true;\n      state.ticks.exit_tick_time = proposal_open_contract.exit_tick_time ? proposal_open_contract.exit_tick_time : null;\n      state.ticks.status = proposal_open_contract.status;\n\n      state.buy.update();\n      state.back.visible = true;\n\n      function forgetStreamAndCb() {\n            const { contract_id } = extra;\n            liveapi.events.off('proposal_open_contract', on_proposal_open_contract);\n            liveapi.events.off('tick', on_tick);\n            liveapi.proposal_open_contract.forget(contract_id);\n      };\n   };\n\n   on_proposal_open_contract = liveapi.events.on('proposal_open_contract', (data) => {\n            const is_different_open_contract_stream = data.proposal_open_contract.contract_id !== extra.contract_id;\n            if (is_different_open_contract_stream) return;\n\n            if (data.error) {\n                  onOpenProposalError(data);\n                  return;\n            }\n\n            ({ proposal_open_contract } = data);\n   });\n   \n  let temp_ticks = [];\n  let first_tick_epoch;\n  let is_getting_history = false;\n  on_tick = liveapi.events.on('tick', (data) => {\n      const is_different_stream = extra.symbol !== data.tick.symbol;\n      if (is_different_stream) return;\n      if (!first_tick_epoch) first_tick_epoch = data.tick.epoch;\n\n      const entry_tick_time = proposal_open_contract && proposal_open_contract.entry_tick_time;\n      if (!entry_tick_time) {\n            temp_ticks.push(data.tick);\n            return;\n      }\n\n      const has_missing_ticks = (+first_tick_epoch > +entry_tick_time);\n      if (has_missing_ticks) {\n            is_getting_history = true;\n            first_tick_epoch = entry_tick_time;\n            getTickHistory(entry_tick_time, extra.symbol);\n      }\n\n      if (is_getting_history) {\n            temp_ticks.push(data.tick);\n            return;\n      };\n\n      if (temp_ticks.length > 0) {\n            temp_ticks.forEach((stored_tick) => addTick(stored_tick));\n            temp_ticks = [];\n      }\n\n      addTick(data.tick);\n    });\n\n    function getTickHistory(start, ticks_history) {\n      liveapi.send({ ticks_history, end: 'latest', start, style: 'ticks', count: 5000})\n            .then((data) => {\n                  is_getting_history = false;\n                  data.history.prices.forEach((price, idx) => {\n                        temp_ticks.push({\n                              epoch: data.history.times[idx],\n                              quote: price,\n                              symbol: extra.symbol,\n                        });\n                  });\n                  temp_ticks.sort((a, b) => (+a.epoch) - (+b.epoch));\n            }).catch((err) => $.growl.error({ message: data.error.message }));\n    };\n\n   const onOpenProposalError = (data) => {\n      $.growl.error({message: data.error.message});\n      liveapi.proposal_open_contract.forget(data.echo_req.contract_id);\n      liveapi.proposal_open_contract.subscribe(data.echo_req.contract_id);\n   };\n};\n\nexport const init = (data, extra, showCallback, hideCallback) => {\n   const display_decimals = chartingRequestMap.digits_after_decimal(extra.pip, extra.symbol);\n   const root = $(html).i18n();\n   const { buy } = data;\n   const state = {\n      title: {\n         text: 'Contract Confirmation'.i18n(),\n      },\n      buy: {\n         barrier: null,\n         message: buy.longcode,\n         balance_after: buy.balance_after,\n         buy_price: (+buy.buy_price).toFixed(currencyFractionalDigits()),\n         purchase_time: buy.purchase_time,\n         start_time: buy.start_time,\n         transaction_id: buy.transaction_id,\n         payout: (+buy.payout).toFixed(currencyFractionalDigits()),\n         currency: extra.currency,\n         potential_profit : (buy.payout - buy.buy_price).toFixed(currencyFractionalDigits()),\n         potential_profit_text : 'Profit'.i18n(),\n         show_result: false,\n      },\n      spreads: {\n         amount_per_point: buy.amount_per_point || '0',\n         stop_loss_level: buy.stop_loss_level || '0',\n         stop_profit_level: buy.stop_profit_level || '0',\n      },\n      ticks: {\n         array: [],\n         contract_is_finished: false,\n         display_decimals,\n         exit_tick_time: null,\n         is_path_dependent: null,\n         makeBarrier: () => {\n            const { barrier } = state.buy;\n            if (barrier) {\n                  return { value: +barrier };\n            }\n            return null;\n         },\n         tick_count: extra.tick_count,\n         value: (extra.digits_value || '0') + '', // last digit value selected by the user\n         category: extra.category,\n         category_display: extra.category_display,\n\n         status: 'waiting', /* could be 'waiting', 'lost' or 'won' */\n         chart_visible: extra.show_tick_chart,\n      },\n      arrow: {\n         visible: !extra.show_tick_chart && extra.category.contract_category !== 'digits',\n      },\n      back: { visible: false }, /* back buttom */\n   };\n\n   if (Lookback.isLookback(extra.category_display.contract_type)) {\n     state.buy.payout = Lookback.formula(extra.category_display.contract_type, extra.amount);\n     state.buy.potential_profit = undefined;\n   }\n\n   state.buy.update = () => {\n      const { status } = state.ticks;\n      state.title.text = { waiting: 'Contract Confirmation'.i18n(),\n         won : 'This contract won'.i18n(),\n         lost: 'This contract lost'.i18n()\n      }[status];\n      if(status === 'lost') {\n         state.buy.potential_profit = (-state.buy.buy_price).toFixed(currencyFractionalDigits());\n         state.buy.payout = (0).toFixed(currencyFractionalDigits());\n         state.buy.potential_profit_text = 'Lost';\n      }\n      if(status === 'won') {\n         state.buy.balance_after = buy.balance_after*1 + state.buy.payout*1;\n         liveapi.sell_expired(); // to update balance immediately\n      }\n      state.buy.show_result = true;\n   };\n\n   state.back.onclick = () => hideCallback(root);\n   state.arrow.onclick = (e) => {\n      const $target = $(e.target);\n      if(!$target.hasClass('disabled')) {\n         $target.addClass('disabled');\n         require(['viewtransaction/viewTransaction'], (viewTransaction) => {\n            viewTransaction.init(extra.contract_id, extra.transaction_id)\n               .then(() => $target.removeClass('disabled'));\n         });\n      }\n   };\n\n   const view = rv.bind(root[0], state);\n   if(!state.arrow.visible) { registerTicks(state, extra); }\n   else {\n      state.back.visible = true; \n      liveapi.events.on('balance', data => {\n         if (local_storage.get(\"authorize\")) {\n            const loginId = local_storage.get('authorize').loginid;\n            if (data.balance && data.balance.loginid === loginId && state.buy.balance_after !== data.balance.balance ) {\n               state.buy.balance_after = data.balance.balance;\n            };\n         }\n      });\n   }\n\n   showCallback(root);\n}\n\nexport default  { init }\n"]}