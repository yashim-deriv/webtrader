{"version":3,"sources":["../../../../src/realitycheck/realitycheck.es6"],"names":["win","timerHandler","promises","FIRST_SCREEN_HEIGHT","SECOND_SCREEN_HEIGHT","settingsData","timeOutInMins","local_storage","get","timeOutMin","timeOutMax","loginId","durationInMins","bought","turnOver","loginTime","sold","pnl","currentTime","open","potentialProfit","currency","continueTrading","event","scope","$","growl","error","message","i18n","dialog","set","accepted_time","moment","utc","valueOf","setOrRefreshTimer","openStatement","require","statement","elem","find","init","click","logout","liveapi","invalidate","resetWindow","showFirstScreen","winWidget","height","show","hide","clearTimeout","logoutAfter_ms","setTimeout","send","reality_check","then","data","is_virtual","durationIn_ms","start_time","max_durationIn_ms","decimals","currencyFractionalDigits","duration","humanize","buy_count","buy_amount","format","sell_count","sell_amount","toFixed","open_contract_count","potential_profit","moveToTop","Promise","resolve","cached","authorize","loginid","landing_company_details","landing_company_name","has_reality_check","html","div","windows","createBlankWindow","title","width","minHeight","resizable","collapsable","minimizable","maximizable","closable","modal","closeOnEscape","ignoreTileAction","appendTo","append","rv","bind","remove","catch","err","oauthLogin","p","push","all","events","on","realityCheck_fromStorage","timeout","Math","abs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAYA,OAAIA,MAAM,IAAV;AAAA,OAAgBC,eAAe,IAA/B;AAAA,OAAqCC,WAAU,EAA/C;AACA,OAAMC,sBAAsB,GAA5B;AAAA,OAAiCC,uBAAuB,GAAxD;AACA,OAAMC,eAAe;AAClBC,qBAAe,CAACC,cAAcC,GAAd,CAAkB,cAAlB,KAAqC,EAAtC,EAA0CF,aAA1C,IAA2D,EADxD;AAElBG,kBAAY,EAFM,EAEFC,YAAY,EAFV;AAGlBC,eAAS,IAHS;AAIlBC,sBAAgB,IAJE;AAKlBC,cAAQ,IALU;AAMlBC,gBAAU,IANQ;AAOlBC,iBAAW,IAPO;AAQlBC,YAAM,IARY;AASlBC,WAAK,IATa;AAUlBC,mBAAa,IAVK;AAWlBC,YAAM,IAXY;AAYlBC,uBAAiB,IAZC;AAalBC,gBAAU,IAbQ;AAclBC,uBAAiB,yBAACC,KAAD,EAAQC,KAAR,EAAkB;AAChC;AACA,aAAIA,MAAMlB,aAAN,GAAsBkB,MAAMf,UAA5B,IAA0Ce,MAAMlB,aAAN,GAAsBkB,MAAMd,UAA1E,EAAsF;AACnFe,6BAAEC,KAAF,CAAQC,KAAR,CAAc,EAAEC,SAAU,iCAAiCC,IAAjC,KAA0CL,MAAMf,UAAhD,GAA6D,QAAQoB,IAAR,EAA7D,GAA8EL,MAAMd,UAAhG,EAAd;AACA;AACF;AACDV,aAAI8B,MAAJ,CAAW,OAAX;AACAvB,uBAAcwB,GAAd,CAAkB,cAAlB,EAAkC,EAAEzB,eAAgBkB,MAAMlB,aAAN,GAAsB,CAAxC,EAA2C0B,eAAgBC,iBAAOC,GAAP,GAAaC,OAAb,EAA3D,EAAlC;AACAC,2BAAkBZ,MAAMlB,aAAxB;AACF,OAvBiB;AAwBlB+B,qBAAe,yBAAM;AAClBC,iBAAQ,CAAC,qBAAD,CAAR,EAAiC,UAACC,SAAD,EAAe;AAC7C,gBAAMC,OAAO,sBAAE,WAAF,EAAeC,IAAf,CAAoB,aAApB,CAAb;AACAF,sBAAUG,IAAV,CAAeF,IAAf;AACAA,iBAAKG,KAAL;AACF,UAJD;AAKF,OA9BiB;AA+BlBC,cAAS;AAAA,gBAAMC,4BAAQC,UAAR,EAAN;AAAA;AA/BS,IAArB;;AAkCA,OAAMC,cAAc,SAAdA,WAAc,CAACC,eAAD,EAAqB;AACtC,UAAGhD,GAAH,EAAQ;AACL,aAAMiD,YAAYjD,IAAI8B,MAAJ,CAAW,QAAX,CAAlB;AACA,aAAIkB,eAAJ,EAAqB;AAClBhD,gBAAI8B,MAAJ,CAAW,EAACoB,QAAQ/C,mBAAT,EAAX;AACA8C,sBAAUR,IAAV,CAAe,2BAAf,EAA4CU,IAA5C;AACAF,sBAAUR,IAAV,CAAe,4BAAf,EAA6CW,IAA7C;AACF,UAJD,MAIO;AACJpD,gBAAI8B,MAAJ,CAAW,EAACoB,QAAQ9C,oBAAT,EAAX;AACA6C,sBAAUR,IAAV,CAAe,2BAAf,EAA4CW,IAA5C;AACAH,sBAAUR,IAAV,CAAe,4BAAf,EAA6CU,IAA7C;AACF;AACH;AACH,IAbD;;AAeA,OAAMf,oBAAoB,SAApBA,iBAAoB,CAAC9B,aAAD,EAAmB;;AAE1C,UAAIL,YAAJ,EAAkBoD,aAAapD,YAAb;AAClB,UAAMqD,iBAAiBhD,gBAAgB,EAAhB,GAAqB,IAA5C;AACAL,qBAAesD,WAAW,YAAM;AAC7BV,qCACIW,IADJ,CACS,EAAEC,eAAgB,CAAlB,EADT,EAEIC,IAFJ,CAES,UAACC,IAAD,EAAU;AACb;;;AAGA,gBAAGpD,cAAcC,GAAd,CAAkB,WAAlB,EAA+BoD,UAAlC,EAA8C;AAC9C,gBAAIC,gBAAgB5B,iBAAOC,GAAP,GAAaC,OAAb,KAAyBwB,KAAKF,aAAL,CAAmBK,UAAnB,GAAgC,IAA7E;AACA,gBAAMC,oBAAoB,KAAK,EAAL,GAAU,EAAV,GAAe,IAAzC;AACA,gBAAIF,gBAAgBE,iBAApB,EAAuCF,gBAAgBE,iBAAhB;AACvC,gBAAMC,WAAWC,0BAAjB;AACA5D,yBAAaO,cAAb,GAA8BqB,iBAAOiC,QAAP,CAAgBL,aAAhB,EAA+BM,QAA/B,EAA9B;AACA9D,yBAAaQ,MAAb,GAAsB8C,KAAKF,aAAL,CAAmBW,SAAzC;AACA/D,yBAAaS,QAAb,GAAwB6C,KAAKF,aAAL,CAAmBY,UAA3C;AACAhE,yBAAaU,SAAb,GAAyBkB,iBAAOC,GAAP,CAAWyB,KAAKF,aAAL,CAAmBK,UAAnB,GAAgC,IAA3C,EAAiDQ,MAAjD,CAAwD,mBAAxD,IAA+E,MAAxG;AACAjE,yBAAaW,IAAb,GAAoB2C,KAAKF,aAAL,CAAmBc,UAAvC;AACAlE,yBAAaY,GAAb,GAAmB,CAAC0C,KAAKF,aAAL,CAAmBe,WAAnB,GAAiCb,KAAKF,aAAL,CAAmBY,UAArD,EAAiEI,OAAjE,CAAyET,QAAzE,CAAnB;AACA3D,yBAAaa,WAAb,GAA2Be,iBAAOC,GAAP,GAAaoC,MAAb,CAAoB,mBAApB,IAA2C,MAAtE;AACAjE,yBAAac,IAAb,GAAoBwC,KAAKF,aAAL,CAAmBiB,mBAAvC;AACArE,yBAAae,eAAb,GAA+BuC,KAAKF,aAAL,CAAmBkB,gBAAlD;AACAtE,yBAAagB,QAAb,GAAwBsC,KAAKF,aAAL,CAAmBpC,QAA3C;AACA0B,wBAAY,KAAZ;AACA/C,gBAAI4E,SAAJ;AACF,UAvBJ;AAwBF,OAzBc,EAyBZtB,cAzBY,CAAf;AA0BF,IA9BD;;AAgCA,OAAMZ,OAAO,SAAPA,IAAO,GAAM;AAChB,UAAI1C,GAAJ,EAAS,OAAO6E,QAAQC,OAAR,CAAgB,IAAhB,CAAP;;AAET,aAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC7BjC,qCACIkC,MADJ,CAEIC,SAFJ,GAGItB,IAHJ,CAGS,UAACC,IAAD,EAAU;AACbtD,yBAAaM,OAAb,GAAuBgD,KAAKqB,SAAL,CAAeC,OAAtC;AACApC,wCACIkC,MADJ,CAEIvB,IAFJ,CAES,EAAC0B,yBAA0BvB,KAAKqB,SAAL,CAAeG,oBAA1C,EAFT,EAGIzB,IAHJ,CAGS,UAACC,IAAD,EAAU;AACb,mBAAIA,QAAQA,KAAKuB,uBAAL,CAA6BE,iBAAzC,EAA4D;;AAEzD9C,0BAAQ,CAAC,qCAAD,EAAwC,mCAAxC,CAAR,EAAsF,UAAC+C,IAAD,EAAU;AAC7F,yBAAMC,MAAM,sBAAED,IAAF,EAAQxD,IAAR,EAAZ;AACA7B,2BAAMuF,kBAAQC,iBAAR,CAA0B,sBAAE,QAAF,CAA1B,EAAuC;AAC1CC,+BAAO,gBAAgB5D,IAAhB,EADmC;AAE1C6D,+BAAO,GAFmC;AAG1CC,mCAAWxF,mBAH+B;AAI1C+C,gCAAQ/C,mBAJkC;AAK1CyF,mCAAW,KAL+B;AAM1CC,qCAAa,KAN6B;AAO1CC,qCAAa,KAP6B;AAQ1CC,qCAAa,KAR6B;AAS1CC,kCAAU,KATgC;AAU1CC,+BAAO,IAVmC;AAW1CC,uCAAe,KAX2B;AAY1CC,0CAAiB,IAZyB;AAa1C,2CAAmB;AAbuB,sBAAvC,CAAN;AAeAb,yBAAIc,QAAJ,CAAapG,GAAb;;AAEA;AACA,2CAAE,MAAF,EAAUqG,MAAV,CAAiBrG,IAAI8B,MAAJ,CAAW,QAAX,CAAjB;AACAiB,iCAAY,IAAZ;;AAEAuD,2CAAGC,IAAH,CAAQjB,IAAI,CAAJ,CAAR,EAAgBjF,YAAhB;;AAEAyE;AACF,mBA1BD;AA4BF,gBA9BD,MA8BO;AACJvE,gCAAciG,MAAd,CAAqB,cAArB;AACF;AACH,aArCJ;AAsCF,UA3CJ,EA4CIC,KA5CJ,CA6CM,UAACC,GAAD;AAAA,mBAASnG,cAAciG,MAAd,CAAqB,cAArB,CAAT;AAAA,UA7CN;AA+CF,OAhDM,CAAP;AAiDF,IApDD;;AAsDA,OAAM5D,SAAS,SAATA,MAAS,GAAM;AAClB,UAAI5C,GAAJ,EAASA,IAAI8B,MAAJ,CAAW,OAAX;AACT,UAAI7B,YAAJ,EAAkBoD,aAAapD,YAAb;AAClBA,qBAAe,IAAf;AACAI,mBAAaC,aAAb,GAA4B,EAA5B;AACAD,mBAAaM,OAAb,GAAsB,IAAtB;AACAN,mBAAaO,cAAb,GAA6B,IAA7B;AACAP,mBAAaQ,MAAb,GAAqB,IAArB;AACAR,mBAAaS,QAAb,GAAuB,IAAvB;AACAT,mBAAaU,SAAb,GAAwB,IAAxB;AACAV,mBAAaW,IAAb,GAAmB,IAAnB;AACAX,mBAAaY,GAAb,GAAkB,IAAlB;AACAZ,mBAAaa,WAAb,GAA0B,IAA1B;AACAb,mBAAac,IAAb,GAAmB,IAAnB;AACAd,mBAAae,eAAb,GAA8B,IAA9B;AACAf,mBAAagB,QAAb,GAAuB,IAAvB;AACF,IAhBD;;AAkBA,OAAMsF,aAAa,SAAbA,UAAa,GAAM;AACtB/D;AACA,UAAG,CAACrC,cAAcC,GAAd,CAAkB,WAAlB,EAA+BoD,UAAnC,EAA8C;AAC3C,aAAMgD,IAAIlE,MAAV;AACAxC,kBAAS2G,IAAT,CAAcD,CAAd;AACA/B,iBAAQiC,GAAR,CAAY5G,QAAZ,EAAsBwD,IAAtB,CAA2B,YAAM;AAC9BX,wBAAY,IAAZ;AACAQ,uBAAW;AAAA,sBAAKvD,IAAI8B,MAAJ,CAAW,MAAX,CAAL;AAAA,aAAX,EAAoC,IAApC;AACA5B,uBAAW,EAAX;AACF,UAJD;AAKF;AAEH,IAZD;;AAcA2C,+BAAQkE,MAAR,CAAeC,EAAf,CAAkB,aAAlB,EAAiCL,UAAjC;AACA9D,+BAAQkE,MAAR,CAAeC,EAAf,CAAkB,OAAlB,EAA2B,UAACrD,IAAD,EAAU;;AAElC,UAAItD,aAAaM,OAAb,IAAwBgD,KAAKqB,SAAL,CAAeC,OAA3C,EAAoD;AACjDrC;AACF;;AAED,UAAMqE,2BAA2B1G,cAAcC,GAAd,CAAkB,cAAlB,CAAjC;AACA,UAAIyG,4BAA4B,CAAC1G,cAAcC,GAAd,CAAkB,WAAlB,EAA+BoD,UAAhE,EAA4E;AACzE,aAAMhD,iBAAiB,CAACqB,iBAAOC,GAAP,GAAaC,OAAb,KAA0B8E,yBAAyBjF,aAApD,IAAsE,EAAtE,GAA2E,IAAlG;AACAuB,oBAAY;AAAA,mBAAKb,OAAOgB,IAAP,CAAY,YAAM;AAChC,mBAAMwD,UAAUtG,kBAAkBqG,yBAAyB3G,aAA3C,GAA2D,CAA3D,GACb6G,KAAKC,GAAL,CAASH,yBAAyB3G,aAAzB,GAAyCM,cAAlD,CADH;AAEAwB,iCAAkB8E,OAAlB;AACF,aAJgB,CAAL;AAAA,UAAZ,EAII,IAJJ;AAKF,OAPD,MAOO;AACJP;AACF;AAEH,IAlBD;;AAoBA9D,+BAAQkE,MAAR,CAAeC,EAAf,CAAkB,oBAAlB,EAAwC,YAAM;AAC3CpE;AACArC,oBAAciG,MAAd,CAAqB,cAArB;AACF,IAHD;;AAKA3D,+BAAQkE,MAAR,CAAeC,EAAf,CAAkB,gBAAlB,EAAoC,YAAM;AACvCzG,oBAAciG,MAAd,CAAqB,cAArB;AACAG;AACF,IAHD;;qBAKe,E","file":"realitycheck.js","sourcesContent":["/**\n * Created by arnab on 4/9/16.\n */\nimport $ from 'jquery';\nimport windows from '../windows/windows';\nimport liveapi from '../websockets/binary_websockets';\nimport rv from '../common/rivetsExtra';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport 'jquery-growl';\nimport '../common/util';\n\nlet win = null, timerHandler = null, promises= [];\nconst FIRST_SCREEN_HEIGHT = 260, SECOND_SCREEN_HEIGHT = 310;\nconst settingsData = {\n   timeOutInMins: (local_storage.get(\"realitycheck\") || {}).timeOutInMins || 10,\n   timeOutMin: 10, timeOutMax: 60,\n   loginId: null,\n   durationInMins: null,\n   bought: null,\n   turnOver: null,\n   loginTime: null,\n   sold: null,\n   pnl: null,\n   currentTime: null,\n   open: null,\n   potentialProfit: null,\n   currency: null,\n   continueTrading: (event, scope) => {\n      //Validate input\n      if (scope.timeOutInMins < scope.timeOutMin || scope.timeOutInMins > scope.timeOutMax) {\n         $.growl.error({ message : 'Please enter a number between '.i18n() + scope.timeOutMin + ' and '.i18n() + scope.timeOutMax });\n         return;\n      }\n      win.dialog('close');\n      local_storage.set(\"realitycheck\", { timeOutInMins : scope.timeOutInMins | 0, accepted_time : moment.utc().valueOf() });\n      setOrRefreshTimer(scope.timeOutInMins);\n   },\n   openStatement: () => {\n      require(['statement/statement'], (statement) => {\n         const elem = $(\"#nav-menu\").find(\"a.statement\");\n         statement.init(elem);\n         elem.click();\n      });\n   },\n   logout : () => liveapi.invalidate()\n};\n\nconst resetWindow = (showFirstScreen) => {\n   if(win) {\n      const winWidget = win.dialog('widget');\n      if (showFirstScreen) {\n         win.dialog({height: FIRST_SCREEN_HEIGHT});\n         winWidget.find('.realitycheck_firstscreen').show();\n         winWidget.find('.realitycheck_secondscreen').hide();\n      } else {\n         win.dialog({height: SECOND_SCREEN_HEIGHT});\n         winWidget.find('.realitycheck_firstscreen').hide();\n         winWidget.find('.realitycheck_secondscreen').show();\n      }\n   }\n}\n\nconst setOrRefreshTimer = (timeOutInMins) => {\n\n   if (timerHandler) clearTimeout(timerHandler);\n   const logoutAfter_ms = timeOutInMins * 60 * 1000;\n   timerHandler = setTimeout(() => {\n      liveapi\n         .send({ reality_check : 1 })\n         .then((data) => {\n            /*\n             * Showing the reality check popup only if the user is using his real account otherwise keeping it minimized.\n             */\n            if(local_storage.get(\"authorize\").is_virtual) return;\n            let durationIn_ms = moment.utc().valueOf() - data.reality_check.start_time * 1000;\n            const max_durationIn_ms = 48 * 60 * 60 * 1000;\n            if (durationIn_ms > max_durationIn_ms) durationIn_ms = max_durationIn_ms;\n            const decimals = currencyFractionalDigits();\n            settingsData.durationInMins = moment.duration(durationIn_ms).humanize();\n            settingsData.bought = data.reality_check.buy_count;\n            settingsData.turnOver = data.reality_check.buy_amount;\n            settingsData.loginTime = moment.utc(data.reality_check.start_time * 1000).format(\"MMM D, YYYY hh:mm\") + \" GMT\";\n            settingsData.sold = data.reality_check.sell_count;\n            settingsData.pnl = (data.reality_check.sell_amount - data.reality_check.buy_amount).toFixed(decimals);\n            settingsData.currentTime = moment.utc().format(\"MMM D, YYYY hh:mm\") + \" GMT\";\n            settingsData.open = data.reality_check.open_contract_count;\n            settingsData.potentialProfit = data.reality_check.potential_profit;\n            settingsData.currency = data.reality_check.currency;\n            resetWindow(false);\n            win.moveToTop();\n         });\n   }, logoutAfter_ms);\n};\n\nconst init = () => {\n   if (win) return Promise.resolve(true);\n\n   return new Promise((resolve) => {\n      liveapi\n         .cached\n         .authorize()\n         .then((data) => {\n            settingsData.loginId = data.authorize.loginid;\n            liveapi\n               .cached\n               .send({landing_company_details : data.authorize.landing_company_name})\n               .then((data) => {\n                  if (data && data.landing_company_details.has_reality_check) {\n\n                     require(['text!realitycheck/realitycheck.html', \"css!realitycheck/realitycheck.css\"], (html) => {\n                        const div = $(html).i18n();\n                        win = windows.createBlankWindow($('<div/>'), {\n                           title: 'Reality check'.i18n(),\n                           width: 600,\n                           minHeight: FIRST_SCREEN_HEIGHT,\n                           height: FIRST_SCREEN_HEIGHT,\n                           resizable: false,\n                           collapsable: false,\n                           minimizable: false,\n                           maximizable: false,\n                           closable: false,\n                           modal: true,\n                           closeOnEscape: false,\n                           ignoreTileAction:true,\n                           'data-authorized': 'true'\n                        });\n                        div.appendTo(win);\n\n                        //This helps in showing multiple dialog windows in modal form\n                        $('body').append(win.dialog('widget'));\n                        resetWindow(true);\n\n                        rv.bind(div[0], settingsData);\n\n                        resolve();\n                     });\n\n                  } else {\n                     local_storage.remove('realitycheck');\n                  }\n               });\n         })\n         .catch(\n            (err) => local_storage.remove('realitycheck')\n         );\n   });\n}\n\nconst logout = () => {\n   if (win) win.dialog('close');\n   if (timerHandler) clearTimeout(timerHandler);\n   timerHandler = null;\n   settingsData.timeOutInMins= 10;\n   settingsData.loginId= null;\n   settingsData.durationInMins= null;\n   settingsData.bought= null;\n   settingsData.turnOver= null;\n   settingsData.loginTime= null;\n   settingsData.sold= null;\n   settingsData.pnl= null;\n   settingsData.currentTime= null;\n   settingsData.open= null;\n   settingsData.potentialProfit= null;\n   settingsData.currency= null;\n};\n\nconst oauthLogin = () => {\n   logout();\n   if(!local_storage.get(\"authorize\").is_virtual){\n      const p = init();\n      promises.push(p);\n      Promise.all(promises).then(() => {\n         resetWindow(true);\n         setTimeout(_ => win.dialog('open'), 1000);\n         promises = [];\n      });\n   }\n\n};\n\nliveapi.events.on('oauth-login', oauthLogin);\nliveapi.events.on('login', (data) => {\n\n   if (settingsData.loginId != data.authorize.loginid) {\n      logout();\n   }\n\n   const realityCheck_fromStorage = local_storage.get(\"realitycheck\");\n   if (realityCheck_fromStorage && !local_storage.get(\"authorize\").is_virtual) {\n      const durationInMins = (moment.utc().valueOf() - (realityCheck_fromStorage.accepted_time)) / 60 / 1000;\n      setTimeout( _ => init().then(() => {\n         const timeout = durationInMins >= realityCheck_fromStorage.timeOutInMins ? 0 :\n            Math.abs(realityCheck_fromStorage.timeOutInMins - durationInMins);\n         setOrRefreshTimer(timeout);\n      }), 1000);\n   } else {\n      oauthLogin();\n   }\n\n});\n\nliveapi.events.on('reset_realitycheck', () => {\n   logout();\n   local_storage.remove('realitycheck');\n});\n\nliveapi.events.on('switch_account', () => {\n   local_storage.remove('realitycheck');\n   oauthLogin();\n});\n\nexport default {};\n\n"]}