{"version":3,"sources":["../../../../src/oauth/login.es6"],"names":["login_win","login_win_view","login","app_id","liveapi","hostname","URL","window","location","href","domain_extension","includes","login_url","server_url","lang","local_storage","get","value","oauth_url","init","moveToTop","root","$","html","i18n","windows","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","remove","open","destroy","unbind","parent","css","init_state","offset","top","my","left","at","find","win","state","login_button_disabled","onRegister","register_link","getBinaryUrl","rv","bind"],"mappings":"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","file":"login.js","sourcesContent":["import liveapi from '../websockets/binary_websockets';\nimport windows from '../windows/windows';\nimport rv from '../common/rivetsExtra';\nimport _ from 'lodash';\nimport html from 'text!./login.html';\nimport 'css!./login.css';\n\nlet login_win = null;\nlet login_win_view = null; // rivets view\n\nexport function login() {\n      const app_id = liveapi.app_id;\n      const hostname = new URL(window.location.href).hostname;\n      const domain_extension = hostname.includes('binary.me') ? '.me' : '.com';\n      const login_url = liveapi.server_url.includes('qa') ? liveapi.server_url : `oauth.binary${domain_extension}`;\n      const lang = (local_storage.get('i18n') || { value:'en' }).value;\n      const oauth_url = `https://${login_url}/oauth2/authorize?app_id=${app_id}&l=${lang}`;\n      window.location = oauth_url;\n}\n\nexport const init = () => {\n   if(login_win){\n      login_win.moveToTop();\n      return;\n   }\n\n   const root = $(html).i18n();\n   login_win = windows.createBlankWindow(root, {\n      title: 'Log in',\n      resizable:false,\n      collapsable:false,\n      minimizable: false,\n      maximizable: false,\n      width: 548,\n      height: 'auto',\n      close: () => {\n         login_win.dialog('destroy');\n         login_win.remove();\n         login_win = null;\n      },\n      open: () => { },\n      destroy: () => {\n         login_win_view && login_win_view.unbind();\n         login_win_view = null;\n      }\n   });\n   login_win.parent().css('overflow', 'visible');\n\n   init_state(root, login_win);\n   login_win.dialog('open');\n\n   /* update dialog position, this way when dialog is resized it will not move*/\n   const offset = login_win.dialog('widget').offset();\n   offset.top = 120;\n   login_win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\n   login_win.dialog('widget').css({\n      left: offset.left + 'px',\n      top: offset.top + 'px'\n   });\n   login_win.dialog('widget').find('.ui-selectmenu-menu ul').css('max-height', '320px');\n}\n\nconst init_state = (root, win) => {\n   const state = {\n      login_button_disabled: false,\n      login: () => {\n         state.login_button_disabled = true;\n         login();\n      },\n      onRegister: () => {\n         const register_link = getBinaryUrl('home.html');\n         window.open(register_link, '_blank');\n      },\n   };\n\n   login_win_view = rv.bind(root[0], state);\n}\n\nexport default {\n   init,\n   login\n}\n"]}