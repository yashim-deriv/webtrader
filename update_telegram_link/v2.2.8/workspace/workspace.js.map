{"version":3,"sources":["../../../../src/workspace/workspace.es6"],"names":["INITIAL_WORKSPACE_NAME","states","local_storage","get","name","set","clone","JSON","parse","stringify","obj","sanitize","value","replace","state","route","closeAll","dialog","workspaces","dialogs","update_route","tileDialogs","workspace","remove","inx","indexOf","w","splice","show","needsAuthentication","tradeDialog","length","portfolio","statement","profitTable","deposit","withdraw","liveapi","is_authenticated","$","growl","notice","message","i18n","manager_win","_","delay","current_workspace","tracker","reopen","prev_name","save_name","blur","el","rename","filter","wk","name_prev_value","is_saved","result","findIndex","save","saveas","apply","cancel","find","matches","match","number","parseInt","change","push","file","hash_code","s","split","reduce","a","b","charCodeAt","open_selector","e","$root","target","closest","click","upload","event","files","reader","FileReader","onload","contents","data","hash","random","template_type","error","readAsText","download","json","downloadFileInBrowser","root","manager_view","openManager","$html","html","close","unbind","destroy","windows","createBlankWindow","title","width","height","resizable","collapsable","minimizable","maximizable","draggable","modal","ignoreTileAction","create","css","overflow","beforeClose","rv","bind","init","parent","showWorkspaceManager","html_menu","append","addDialog","id","clickCb","removeCb","row","cleaner","removeDialog","item","events","shuffle","array","temp","rand_inx","Math","floor","d","$d","hasClass","window","arrange","perform","total_free_space","max_x","y","is","inx_start","row_height","x","h","max","free_space","margin_left","j","animate","left","top","trigger","my","at","best","best_free_space","i","slice","largeDialogs","forEach","setTimeout"],"mappings":"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","file":"workspace.js","sourcesContent":["import html_menu from 'text!./workspace-menu.html';\nimport html from 'text!./workspace.html';\nimport rv from '../common/rivetsExtra';\nimport $ from 'jquery';\nimport 'jquery-growl';\nimport 'css!./workspace-menu.css';\nimport 'css!./workspace.css';\nimport liveapi from '../websockets/binary_websockets';\nimport windows from '../windows/windows';\nimport tracker from '../windows/tracker';\n\nconst INITIAL_WORKSPACE_NAME = 'my-workspace-1';\n(() => {\n   const states = local_storage.get('states');\n   if(states && !states.name) {\n      states.name = INITIAL_WORKSPACE_NAME;\n      local_storage.set('states', states);\n   }\n})();\n\nconst clone = obj => JSON.parse(JSON.stringify(obj));\n\nconst sanitize = value => value.replace(/(\"|'|\\&|\\(|\\)|\\<|\\>|\\;)/g, '');\n\nconst state = {\n   route: 'active', // one of ['active', 'saved', 'rename', 'saveas']\n   closeAll: () => $('.webtrader-dialog').dialog('close'),\n   workspaces: local_storage.get('workspaces') || [],\n   dialogs: [ ],\n   update_route: route => state.route = route,\n   tileDialogs: () => tileDialogs(),\n   workspace: {\n      remove: w => {\n         const inx = state.workspaces.indexOf(w);\n         inx !== -1 && state.workspaces.splice(inx, 1);\n         local_storage.set('workspaces', state.workspaces);\n      },\n      show: w => {\n         let needsAuthentication = w.tradeDialog && w.tradeDialog.length;\n         needsAuthentication = needsAuthentication || w.portfolio || w.statement || w.profitTable \n                              || w.deposit || w.withdraw;\n         if(needsAuthentication && !liveapi.is_authenticated()) {\n            $.growl.notice({ message: 'Please log in to see your saved workspace.'.i18n() });\n            return;\n         }\n         state.closeAll();\n         manager_win.dialog('close');\n         _.delay(() => {\n            state.current_workspace.name = sanitize(w.name);\n            local_storage.set('states', w);\n            tracker.reopen(clone(w));\n         }, 500);\n      },\n      prev_name: '',\n      save_name: w => state.workspace.prev_name = sanitize(w.name),\n      blur: el => el.blur(),\n      rename: w => {\n        const prev_name = sanitize(state.workspace.prev_name);\n        const current_workspace = state.current_workspace;\n        if(!w.name || state.workspaces.filter(wk => wk.name === w.name).length >= 2)\n          w.name = state.workspace.prev_name;\n        local_storage.set('workspaces', state.workspaces);\n        if(current_workspace.name === prev_name) {\n          current_workspace.name = sanitize(w.name);\n\n          const states = local_storage.get('states');\n          states.name = sanitize(w.name);\n          local_storage.set('states', states);\n        }\n      }\n   },\n   current_workspace: {\n      name: sanitize((local_storage.get('states') || {  }).name || 'workspace-1'),\n      name_prev_value: '',\n      is_saved: () => {\n         const result = _.findIndex(state.workspaces, {name: sanitize(state.current_workspace.name)}) !== -1;\n         return result;\n      },\n      save: () => {\n         const {name, is_saved} = state.current_workspace;\n         if(!is_saved()) {\n            return state.saveas.show();\n         }\n         const workspace = local_storage.get('states');\n         if (workspace) {\n            workspace.name = sanitize(name);\n            const inx = _.findIndex(state.workspaces, {name: workspace.name});\n            state.workspaces[inx] = workspace;\n            state.workspaces = clone(state.workspaces);\n            local_storage.set('workspaces', state.workspaces);\n            $.growl.notice({ message: 'Workspace changes saved'.i18n() });\n         }\n      }\n   },\n   rename: {\n      show: () => {\n         state.current_workspace.name_prev_value = sanitize(state.current_workspace.name);\n         state.route = 'rename';\n      },\n      apply: () => { \n         let {name, name_prev_value} = state.current_workspace;\n         if(!name || name === name_prev_value) { \n            return state.rename.cancel();\n         }\n         if(_.find(state.workspaces, {name: name})) {\n            const matches = name.match(/\\d+$/);\n            let number = matches ? parseInt(matches[0]) : 0;\n            name = name.replace(/\\d+$/, '');\n            while(_.find(state.workspaces, {name: name + number}))\n               number += 1;\n            name = name + number;\n         }\n         const workspace = _.find(state.workspaces, {name: name_prev_value});\n         if(workspace) {\n            workspace.name = name;\n            state.workspaces = state.workspaces;\n            local_storage.set('workspaces', state.workspaces);\n         }\n         const states = local_storage.get('states');\n         states.name = name;\n         local_storage.set('states', states);\n\n         state.current_workspace.name = sanitize(name);\n         state.route = 'active';\n      },\n      change: () => {\n         state.current_workspace.name = sanitize(state.current_workspace.name);\n      },\n      cancel: () => {\n         state.current_workspace.name = sanitize(state.current_workspace.name_prev_value);\n         state.route = 'active';\n      }\n   },\n   saveas: {\n      show: () => {\n        if (state.route !== 'saveas') {\n          state.current_workspace.name_prev_value = sanitize(state.current_workspace.name);\n          state.route = 'saveas';\n        }\n        else {\n          state.route = 'active';\n        }\n      },\n      apply: () => { \n         let {name, name_prev_value} = state.current_workspace;\n         if(!name) { \n            return state.saveas.cancel();\n         }\n         if(_.find(state.workspaces, {name: name})) {\n            const matches = name.match(/\\d+$/);\n            let number = matches ? parseInt(matches[0]) : 0;\n            name = name.replace(/\\d+$/, '');\n            while(_.find(state.workspaces, {name: name + number}))\n               number += 1;\n            name = name + number;\n         }\n         const workspace = local_storage.get('states');\n         workspace.name = name;\n         state.workspaces.push(workspace);\n         local_storage.set('workspaces', state.workspaces);\n\n         state.current_workspace.name = name;\n         state.route = 'active';\n         $.growl.notice({ message: \"Added new workspace %\".i18n().replace('%', `<b>${name}</b>`) });\n      },\n      cancel: () => state.rename.cancel()\n   },\n   file: {\n      hash_code: (s) => JSON.stringify(s).split(\"\").reduce((a,b) => {a=((a<<5)-a)+b.charCodeAt(0);return a&a},0),\n      open_selector: (e) => {\n         const $root = $(e.target).closest('.workspace-manager-dialog');\n         $root.find(\"input[type=file]\").click();\n      },\n      upload: (event) => {\n         // const _this = this;\n         const file = event.target.files[0];\n         event.target.value = null;\n         if(!file) { return; }\n\n         const reader = new FileReader();\n         reader.onload = (e) => {\n            const contents = e.target.result;\n            // const array = local_storage.get(\"trade-templates\");\n            let data = null;\n            try{\n               data = JSON.parse(contents);\n               data.name = sanitize(data.name);\n               const hash = data.random;\n               delete data.random;\n               if(hash !== state.file.hash_code(data)){ throw \"Invalid JSON file\".i18n(); }\n               if(data.template_type !== 'workspace-template') { throw \"Invalid template type.\".i18n(); }\n            } catch(e) {\n               $.growl.error({message:e});\n               return;\n            }\n\n            if(_.find(state.workspaces, {name: data.name})) {\n               const matches = name.match(/\\d+$/);\n               $.growl.error({message: \"Template name already exists\".i18n()});\n               return; // don't apply the same workspace\n            }\n            delete data.template_type;\n            delete data.random;\n            state.workspaces.push(data);\n            local_storage.set('workspaces', state.workspaces);\n\n            state.workspace.show(data);\n\n            $.growl.notice({message: \"Successfully added workspace as \".i18n() + \"<b>\" + data.name + \"</b>\"});\n         }\n\n         reader.readAsText(file);\n      },\n      download: (w) => {\n         const {name} = w;\n         const inx = _.findIndex(state.workspaces, {name: name});\n         const workspace = inx !== -1 ? state.workspaces[inx] : local_storage.get('states');\n         workspace.name = sanitize(name);\n         workspace.template_type = 'workspace-template';\n         workspace.random = state.file.hash_code(workspace)\n         var json = JSON.stringify(workspace);\n         downloadFileInBrowser(workspace.name + '.json', 'text/json;charset=utf-8;', json);\n         $.growl.notice({message: \"Downloading workspace as %1\".i18n().replace(\"%1\", `<b>${workspace.name}.json</b>`)});\n      }\n   }\n};\nstate.current_workspace.root = state;\nlet manager_win = null;\nlet manager_view = null;\nconst openManager = () => {\n  const $html = $(html).i18n();\n  const close = () => {\n    manager_view && manager_view.unbind();\n    manager_view = null;\n    manager_win && manager_win.destroy();\n    manager_win = null;\n  };\n  manager_win = windows.createBlankWindow($html, {\n    title: 'Manage'.i18n(),\n    width: 400,\n    height: 250,\n    resizable: false,\n    collapsable: false,\n    minimizable: false,\n    maximizable: false,\n    draggable: false,\n    modal: true,\n    close: close,\n    ignoreTileAction:true,\n    'data-authorized': true,\n    create:() => $('body').css({ overflow: 'hidden' }),\n    beforeClose: () => $('body').css({ overflow: 'inherit' })\n  });\n  manager_view = rv.bind($html[0], state);\n  manager_win.dialog('open');\n}\n\nexport const init = (parent) => {\n   const state = {\n     closeAll: () => $('.webtrader-dialog').dialog('close'),\n     tileDialogs: () => tileDialogs(),\n     showWorkspaceManager: () => {\n       openManager();\n     }\n   };\n   const root = $(html_menu);\n   parent.append(root);\n   rv.bind(root[0], state);\n}\nexport const addDialog = (name, id, clickCb, removeCb) => {\n   const row = {\n      name: name,\n      id: id,\n      click: () => {\n        manager_win && manager_win.dialog('close');\n        clickCb();\n      },\n      remove: () => { cleaner(); removeCb(); } \n   };\n   const cleaner = () => {\n      const inx = state.dialogs.indexOf(row);\n      inx !== -1 && state.dialogs.splice(inx, 1);\n   }\n   state.dialogs.push(row);\n   return cleaner;\n}\n\nexport const removeDialog = (id) => {\n   state.dialogs = state.dialogs.filter( item => item.id !== id);\n}\n\nexport const events = $('<div/>');\n\nexport const tileDialogs = () => {\n   /* shuffle the given array */\n   const shuffle = (array) => {\n      let temp, rand_inx;\n\n      for (let inx = array.length; inx > 0;) {\n         rand_inx = Math.floor(Math.random() * inx);\n         --inx;\n         temp = array[inx];\n         array[inx] = array[rand_inx];\n         array[rand_inx] = temp;\n      }\n\n      return array;\n   }\n\n   // get array of dialogs\n   var dialogs = $('.webtrader-dialog').filter((inx, d) => {\n      /* check to see if initialized and is visible */\n      const $d = $(d);\n      return $d.hasClass(\"ui-dialog-content\") && $d.dialog(\"isOpen\") &&\n            !$d.hasClass('ui-dialog-minimized') && ($(window).width() >= $d.dialog('option', 'width'));\n   });\n\n\n   const arrange = (dialogs, perform) => {\n      let total_free_space = 0;\n\n      const max_x = $(window).width();\n      let y = 115; // position of the next window from top\n      if($(\"#msg-notification\").is(\":visible\"))\n            y = 150;\n\n      for (var inx = 0; inx < dialogs.length;) {\n         var inx_start = inx;\n         var row_height = 0; // height of the current row of dialogs\n         var x = 0; // positon of the next window from left\n\n         for (;/* see which which dialogs fit into current row */;) {\n            if (inx == dialogs.length)\n               break;\n            const d = $(dialogs[inx]);\n            const w = d.dialog('option', 'width'),\n               h = d.dialog('option', 'height');\n            row_height = Math.max(row_height, h);\n            if (x + w <= max_x) {\n               x += w;\n               ++inx;\n            }\n            else\n               break;\n         }\n\n         /* divide the vertical space equally between dialogs. */\n         const free_space = x < max_x ? (max_x - x) : 0;\n         let margin_left = x < max_x ? (max_x - x) / (inx - inx_start + 1) : 0; /* the current window might be wider than screen width */\n         if(inx != dialogs.length) { /* we don't care about extra space at last row */\n            total_free_space += free_space;\n         }\n         if (x === 0 && $(dialogs[inx]).dialog('option', 'width') > max_x) {\n            ++inx;\n            margin_left = 0;\n         };\n         x = 0;\n         for (var j = inx_start; j < inx; ++j) {\n            x += margin_left;\n            const d = $(dialogs[j]);\n            const w = d.dialog('option', 'width'),\n               h = d.dialog('option', 'height');\n\n            if(perform) /* are we testing or do we want to arrange elements */\n               d.dialog('widget').animate({\n                  left: x + 'px',\n                  top: y + 'px'\n               }, 1500, d.trigger.bind(d, 'animated'));\n            /* update dialog option.position */\n            d.dialog(\"option\", \"position\", { my: x, at: y });\n            x += w;\n         };\n         y += row_height + 20;\n      }\n      return total_free_space;\n   }\n\n   /* we will try 100 different arrangements and pick the best one */\n   let best = null,\n      best_free_space = 1000*1000;\n   for (var i = 0; i < 100; ++i) {\n     // https://trello.com/c/NUzJ7nRn/947-chart-auto-scroll\n      // shuffle(dialogs); // shuffle dialogs\n      var total_free_space = arrange(dialogs, false);\n      if (total_free_space < best_free_space) {\n         best = dialogs.slice(); // clone the array\n         best_free_space = total_free_space;\n      }\n   }\n   // get array of large dialogs (larger than window size)\n   const largeDialogs = $('.webtrader-dialog').filter(function (inx, d) {\n      /* check to see if initialized and is visible */\n      const $d = $(d);\n      return $d.hasClass(\"ui-dialog-content\") && $d.dialog(\"isOpen\") && !$d.hasClass('ui-dialog-minimized') && ($(window).width() < $d.dialog('option', 'width'));\n   });\n   _(largeDialogs).forEach(function (d) {\n      best.push(d);\n   });\n   arrange(best, true);\n\n   setTimeout(() => events.trigger('tile'), 1600);\n}\n\nexport default { init, addDialog, removeDialog, events, tileDialogs };\n"]}